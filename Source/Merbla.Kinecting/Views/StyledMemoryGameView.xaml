<UserControl x:Class="Merbla.Kinecting.Views.StyledMemoryGameView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:controls="clr-namespace:Merbla.Kinecting.WPF.Controls;assembly=Merbla.Kinecting.WPF.Controls"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Core="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions">

    <UserControl.Resources> 
        <Style x:Key="MemoryContentStyle" TargetType="Button">
            <Setter Property="Height" Value="50"></Setter>
            <Setter Property="Width" Value="50"></Setter>
            <Setter Property="FontSize" Value="20"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Value.Selected}" Value="False">
                    <Setter Property="FontWeight" Value="Normal"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Value.Selected}" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                </DataTrigger>           
                <DataTrigger Binding="{Binding Value.Matched}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"  >
                                    <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"  >
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.005"/>
                                </DoubleAnimationUsingKeyFrames>
                                
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger> 
            </Style.Triggers> 
        </Style>
        <DataTemplate x:Key="ItemTemplate2">
            <StackPanel>
                <TextBlock Text="{Binding Title}"/>
            </StackPanel>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <WrapPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
    </UserControl.Resources>
    <Canvas x:Name="canvas" Height="{Binding CanvasHeight}" Width="{Binding CanvasWidth}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
       

        <ItemsControl ItemsSource="{Binding MemoryGame.Tiles}" ItemsPanel="{StaticResource ItemsPanelTemplate1}"   >

            <ItemsControl.ItemTemplate>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal">
                        <Button Content="{Binding Value.DisplayText}" 
                                cal:Message.Attach="[Event Click] = [Action ChooseTile($dataContext)]" 
                                Style="{StaticResource MemoryContentStyle}"  >
                        </Button>
                        <!--<controls:ContentControl3D Content="{Binding Value.DisplayText}"  >
                            <i:Interaction.Triggers>
                                <Core:DataTrigger  Binding="{Binding  Value.Selected , Mode=OneWay}" Value="true">
                                    <i:InvokeCommandAction Command="controls:ContentControl3D.RotateCommand"/>
                                </Core:DataTrigger>
                            </i:Interaction.Triggers>                            
                        </controls:ContentControl3D>-->
                    </StackPanel>




                    <!--<controls:ContentControl3D Style="{StaticResource ThreeDContent}" >
                            <i:Interaction.Triggers>
                                <Core:DataTrigger  Binding="{Binding   Value.Selected , Mode=OneWay}" Value="true">
                                    <i:InvokeCommandAction Command="controls:ContentControl3D.RotateCommand"/>
                                </Core:DataTrigger>
                                <Core:DataTrigger  Binding="{Binding  Value.Selected, Mode=TwoWay}" Value="false">
                                    <i:InvokeCommandAction Command="controls:ContentControl3D.RotateCommand"/>
                                </Core:DataTrigger>
                            </i:Interaction.Triggers>
                            <controls:ContentControl3D.BackContentTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:ContentControl3D}}, Path=DataContext.Value.HiddenText}" 
                                            Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:ContentControl3D}}, Path=DataContext}" 
                                            cal:Message.Attach="[Event Click] = [Action Close($source )]"   
                                            />
                                </DataTemplate>
                            </controls:ContentControl3D.BackContentTemplate>
                            <Button Content="{Binding Value.Text}" cal:Message.Attach="[Event Click] = [Action Open($dataContext)]"  />
                        </controls:ContentControl3D>-->

                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <controls:HandCursor   Canvas.Top="{Binding HandCursorY}" Canvas.Left="{Binding HandCursorX}" TrackedJoint="{Binding TrackedJoint}"  />
    </Canvas>
</UserControl>
